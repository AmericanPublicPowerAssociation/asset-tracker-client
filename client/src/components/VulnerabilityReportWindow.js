import React, { PureComponent } from 'react'
import { withStyles } from '@material-ui/core/styles'
import Table from '@material-ui/core/Table'
import TableBody from '@material-ui/core/TableBody'
import TableHead from '@material-ui/core/TableHead'
import TableRow from '@material-ui/core/TableRow'
import TableCell from '@material-ui/core/TableCell'
import Typography from '@material-ui/core/Typography'
import { ASSET_TYPE_BY_ID } from '../constants'

const styles = () => ({
	root: {
    height: '100%',
	},
  hover: {
    cursor: 'pointer',
  },
})

class VulnerabilityReportWindow extends PureComponent {
  state = {
    vulnerableAssets: []
  }

  componentDidMount() {
    const {
      visibleAssets,
    } = this.props
    visibleAssets.forEach((asset) => {
      const name = asset.get('productName')
      if (name) {
        fetch(`http://18.206.94.219:5000/vulnerable_assets?name=${name}`)
          .then((response)=> {
            response.json()
              .then((va) => {
                this.setState((prevState, prevProps) => {
                  return {
                    'vulnerableAssets': prevState.vulnerableAssets.concat(
                      [{'asset': asset, 'vulnerabilities': va}])
                  }
                })

              })
          })
      }
    })
  }

  render() {
    const {
      classes,
      focusingAssetId,
      setFocusingAsset,
    } = this.props;
    const {vulnerableAssets} = this.state;
    return (
      <div className={classes.root}>
        <Typography variant='h6' align='center'>Vulnerability Report</Typography>
        <Table>
          <TableHead>
            <TableRow>
              <TableCell>Asset Name</TableCell>
              <TableCell>Vulnerability</TableCell>
              <TableCell>Score</TableCell>
              <TableCell>CVE ID</TableCell>
              <TableCell>Date published</TableCell>
              <TableCell align='right'>Asset Type</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
          {vulnerableAssets.flatMap( (v) => {
            const asset = v['asset'];
            const assetId = asset.get('id')
            const assetName = asset.get('name')
            const assetTypeId = asset.get('typeId')
            const vulnerabilities = v['vulnerabilities'];
            return vulnerabilities.map((vulnerability) => {
              const description = vulnerability['description']
              const score = vulnerability['score']
              const vuln_id = vulnerability['id']
              const date_published = vulnerability['date_published']
              return (
                <TableRow
                  hover
                  selected={assetId === focusingAssetId}
                  classes={{
                    hover: classes.hover,
                  }}
                  onClick={() => {
                    setFocusingAsset({id: assetId})
                  }}
                  key={assetId}
                >
                  <TableCell component='th' scope='row'>
                    {assetName}
                  </TableCell>
                  <TableCell component='th' scope='row'>
                    {description}
                  </TableCell>
                  <TableCell component='th' scope='row'>
                    {score}
                  </TableCell>
                  <TableCell component='th' scope='row'>
                    {vuln_id}
                  </TableCell>
                  <TableCell component='th' scope='row'>
                    {date_published}
                  </TableCell>
                  <TableCell align='right'>
                    {ASSET_TYPE_BY_ID[assetTypeId].name}
                  </TableCell>
                </TableRow>
              )
            })
          })}
          </TableBody>
        </Table>
      </div>
    )
  }
}

export default withStyles(styles)(VulnerabilityReportWindow)
